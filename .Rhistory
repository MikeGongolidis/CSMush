ggplot(data = mpg, aes(fill=cty~hwy, x=tr )) +
geom_boxplot()
library(gridExtra)
g1<-ggplot(mpg,aes(x=tr,y=cty))+geom_boxplot()
g2<-ggplot(mpg,aes(x=tr,y=hwy))+geom_boxplot()
grid.arrange(g1,g2)
grid.arrange(g1,g2,ncol=1)
grid.arrange(g1,g2,nrow=1)
g1<-ggplot(mpg,aes(x=tr,y=cty,fill=tr))+geom_boxplot()
g1
g2<-ggplot(mpg,aes(x=tr,y=hwy,fill=tr))+geom_boxplot()
grid.arrange(g1,g2,nrow=1)
mmpg<-melt(mpg,id=c("cty","hwy"))
View(mmpg)
g1<-ggplot(mpg,aes(x=tr,y=cty))+geom_boxplot()
g2<-ggplot(mpg,aes(x=tr,y=hwy))+geom_boxplot()
grid.arrange(g1,g2,nrow=1)
mpg$miles<-range(cty)
mpg$miles<-range(mpg$cty)
mpg$miles
View(mpg)
mpg$miles<-range(mpg$cty && mpg$hwy)
View(mpg)
mpg$miles<-range(mpg$cty || mpg$hwy)
View(mpg)
mpg$miles<-range(mpg$cty + mpg$hwy)
View(mpg)
mpg$miles<-range(max(mpg$cty , mpg$hwy)
)
View(mpg)
mmpg<-melt(mpg,id=c("tr))
)
mmpg<-melt(mpg,id=c("tr"))
View(mpg)
View(mmpg)
mmpg<-melt(mpg,id=c("tr","manufacturer","model","cyl","year","fl","class","miles","trans","drv"))
View(mmpg)
mmpg<-melt(mpg,id=c("tr","manufacturer","model","cyl","year","fl","class","miles","trans","drv","displ"))
View(mmpg)
ggplot(mmpg,aes(x=tr,y=value,fill=variable))+geom_boxplot()
source('~/.active-rstudio-document')
source('~/MASTER/Intelligent Data Analysis/homework1/hw1.r')
load("~/MASTER/Intelligent Data Analysis/Lab3/mpg.RData")
source('~/MASTER/Intelligent Data Analysis/homework1/hw1.r')
source('~/MASTER/Intelligent Data Analysis/homework1/hw1.r')
source('~/MASTER/Intelligent Data Analysis/homework1/hw1.r')
source('~/MASTER/Intelligent Data Analysis/homework1/hw1.r')
g1
g1<-ggplot(mmpg,aes(x=tr,y=value,fill=variable))+geom_boxplot()+labs(colour = "Miles")
g1
g1<-ggplot(mmpg,aes(x=tr,y=value,colour=variable))+geom_boxplot()+labs(colour = "Miles")
g1
g1<-ggplot(mmpg,aes(x=tr,y=value,fill=variable))+geom_boxplot()+labs(fill = "Miles")
g1
source('~/MASTER/Intelligent Data Analysis/homework1/hw1.r')
g1
mmmpg$cyl<-as.factor(mpg$cyl,levels=c(2,4,6,8))
mmmpg$cyl<-factor(mpg$cyl,levels=c(2,4,6,8))
mpg$cyl<-factor(mpg$cyl,levels=c(2,4,6,8))
View(mpg)
g2<-ggplot(mmpg,aes(x=cyl,y=value,fill=variable))+geom_boxplot()+labs(fill = "Miles",x="Number of cylinders",y="NUmber of Miles")
g2
g2<-ggplot(mmpg,aes(x=fl,y=value,fill=variable))+geom_boxplot()+labs(fill = "Miles",x="fuel type",y="NUmber of Miles")
g2
mmpg$fl<-factor(mpg$fl,levels=c("petrol","diesel","ethanol","regular"))
g2<-ggplot(mmpg,aes(x=fl,y=value,fill=variable))+geom_boxplot()+labs(fill = "Miles",x="fuel type",y="NUmber of Miles")
g2
View(mmpg)
factor(mpg$fl,levels=c("petrol","diesel","ethanol","regular"))
factor(mpg$fl)
mpg$fl
mmpg$fl<-factor(mpg$fl,levels=c("p","d","e","r","c"),labels=c("petrol","diesel","ethanol","regular","mistake"))
g2<-ggplot(mmpg,aes(x=fl,y=value,fill=variable))+geom_boxplot()+labs(fill = "Miles",x="fuel type",y="NUmber of Miles")
g2
g2<-ggplot(mmpg,aes(x=variable,y=value,fill=fl))+geom_boxplot()+labs(fill = "Miles",x="fuel type",y="NUmber of Miles")
g2
g3<-ggplot(mmpg,aes(x=variable,y=value,fill=cyl))+geom_boxplot()+labs(fill = "Number of cylinders",x="fuel type",y="NUmber of Miles")
g3
View(mmpg)
g3<-ggplot(mmpg,aes(x=variable,y=value,fill=as.factor(cyl)))+geom_boxplot()+labs(fill = "Number of cylinders",x="fuel type",y="NUmber of Miles")
g3
g3<-ggplot(mmpg,aes(x=variable,y=value,fill=as.factor(cyl)))+geom_boxplot()+labs(fill = "Number of cylinders",x=" ",y="NUmber of Miles")
g3
g1<-ggplot(mmpg,aes(x=tr,y=value,fill=variable))+geom_boxplot()+labs(fill = "Miles",x="Type of transmission",y="NUmber of Miles")
g1
grid.arrange(g1,g2,g3,nrow=1)
grid.arrange(g1,g2,g3,nrow=2)
grid.arrange(g2,g3,g1,nrow=2)
g1<-ggplot(mmpg,aes(x=variable,y=value,fill=tr))+geom_boxplot()+labs(fill = "Miles",x="Type of transmission",y="NUmber of Miles")
g1
g1<-ggplot(mmpg,aes(x=variable,y=value,fill=tr))+geom_boxplot()+labs(fill = "Type of Transmission",x=" ",y="NUmber of Miles")
g1
source('~/MASTER/Intelligent Data Analysis/homework1/hw1.r')
pp <- read.csv("paris_paintings.csv",
na.strings = c("NA","n/a", "", "#NAME?", " ", "Unknown", "X"),
stringsAsFactors = FALSE)
pp <- read.csv("paris_paintings.csv",
na.strings = c("NA","n/a", "", "#NAME?", " ", "Unknown", "X"),
stringsAsFactors = FALSE)
dim(pp)
str(pp)
pp$price<- as.numeric(gsub(",","",pp$price))
?gsub
# Some useful commands
head(pp)
table(pp$year)
summary(pp$price)
hist(log(pp$price))
table(pp$year)
hist(pp$price)
boxplot(log(pp$price) ~pp$school_pntg)
boxplot(log(pp$price) ~pp$year)
boxplot(pp$price ~pp$school_pntg)
boxplot(log(pp$price) ~pp$school_pntg)
boxplot(log(pp$price) ~pp$school_pntg)
boxplot(log(pp$price) ~pp$Shape_nn)
##
sum(complete.cases(pp))
# Summarize (count) NA's per variable
t=pp %>%
summarise_all(funs(sum(is.na(.))))
library(stringr)
library(ggplot2)
library(gridExtra)
library(plyr)
#mpg <- get(load("mpg.Rdata"))
mpg$tr <-substr(mpg$trans, 0, 1)
mpg <- get(load("mpg.Rdata"))
library(stringr)
library(ggplot2)
library(gridExtra)
library(plyr)
mpg <- get(load("mpg.Rdata"))
mpg$tr <-substr(mpg$trans, 0, 1)
View(mpg)
mpg$tr<-str_replace(mpg$tr,"^m","Manual")
mpg$tr<-str_replace(mpg$tr,"^a","Automatic")
#melt reshapes the dataset so its easier to manipulate through plots.
#call View(mmpg) and View(mpg) to see the difference
mmpg<-melt(mpg,id=c("tr","manufacturer","model","cyl","year","fl","class","trans","drv","displ"))
library(reshape)
#melt reshapes the dataset so its easier to manipulate through plots.
#call View(mmpg) and View(mpg) to see the difference
mmpg<-melt(mpg,id=c("tr","manufacturer","model","cyl","year","fl","class","trans","drv","displ"))
#melt reshapes the dataset so its easier to manipulate through plots.
#call View(mmpg) and View(mpg) to see the difference
mmpg<-melt(mpg,id=c("tr","manufacturer","model","cyl","year","fl","class","trans","drv","displ"))
View(mpg)
#melt reshapes the dataset so its easier to manipulate through plots.
#call View(mmpg) and View(mpg) to see the difference
mmpg<-melt(mpg,id=c("manufacturer","model","displ","year","cyl","trans","drv","fl","class","tr"))
load("~/MASTER/Intelligent Data Analysis/homework1/mpg.RData")
load("~/MASTER/Intelligent Data Analysis/homework1/mpg.RData")
#mpg <- get(load("mpg.Rdata"))
mpg$tr <-substr(mpg$trans, 0, 1)
mpg$tr<-str_replace(mpg$tr,"^m","Manual")
mpg$tr<-str_replace(mpg$tr,"^a","Automatic")
#melt reshapes the dataset so its easier to manipulate through plots.
#call View(mmpg) and View(mpg) to see the difference
mmpg<-melt(mpg,id=c("manufacturer","model","displ","year","cyl","trans","drv","fl","class","tr"))
g1<-ggplot(mmpg,aes(x=tr,y=value,fill=variable))+geom_boxplot()+labs(fill = "Miles",x="Type of transmission",y="NUmber of Miles")
g1
g1.2<-ggplot(mmpg,aes(x=variable,y=value,fill=tr))+geom_boxplot()+labs(fill = "Type of Transmission",x=" ",y="NUmber of Miles")
g1.2
density(mpg$year)
plot(density(year))
plot(density(mpg$year))
polygon(plot(density(mpg$year)), col="red", border="blue")
d<-density(mpg$year)
plot(d)
plot(d)
polygon(d)
d<-density(mpg$year)
polygon(d)
plot(d)
polygon(d)
polygon(d,color="blue")
polygon(d,col="blue")
polygon(d,col="blue",border="green")
d<-density(mpg$cty)
density(mpg$cty)
plot(density(mpg$cty))
summary(mpg$cty)
summary(mpg$year)
sm.density.compare(mpg, cyl, xlab="Miles Per Gallon")
library(sm)
install.packages("sm")
library("sm")
sm.density.compare(mpg, cyl, xlab="Miles Per Gallon")
sm.density.compare(mpg, cty, xlab="Miles Per Gallon")
density(mpg$cty)
mpg3<-melt(mpg,id=c("manufacturer","model","displ","cyl","trans","drv","cty","hwy","fl","class","tr"))
View(mpg3)
density(mpg$value)
density(mpg$variable)
density(mpg3$value)
summary(mpg3$value)
View(mpg)
# Visualizing missing data
library("Amelia")
pp <- read.csv("paris_paintings.csv",
na.strings = c("NA","n/a", "", "#NAME?", " ", "Unknown", "X"),
stringsAsFactors = FALSE)
dim(pp)
str(pp)
pp$price<- as.numeric(gsub(",","",pp$price))
?gsub
# Some useful commands
head(pp)
table(pp$year)
summary(pp$price)
hist(log(pp$price))
table(pp$year)
hist(pp$price)
boxplot(log(pp$price) ~pp$school_pntg)
boxplot(log(pp$price) ~pp$year)
boxplot(pp$price ~pp$school_pntg)
boxplot(log(pp$price) ~pp$school_pntg)
boxplot(log(pp$price) ~pp$Shape_nn)
##
sum(complete.cases(pp))
# Summarize (count) NA's per variable
t=pp %>%
summarise_all(funs(sum(is.na(.))))
t
# Visualizing missing data
library("Amelia")
missmap(pp)
table(pp$Shape)
missmap(pp)
load("~/MASTER/Intelligent Data Analysis/homework1/mpg.RData")
#mpg <- get(load("mpg.Rdata"))
mpg$tr <-substr(mpg$trans, 0, 1)
mpg$tr<-str_replace(mpg$tr,"^m","Manual")
mpg$tr<-str_replace(mpg$tr,"^a","Automatic")
View(mpg)
mpg<- mpg[mpg$fl!="e"]
mpg<- mpg[mpg$fl!="e",]
summary(mpg$fl)
table(mpg$fl)
load("~/MASTER/Intelligent Data Analysis/homework1/mpg.RData")
#mpg <- get(load("mpg.Rdata"))
mpg$tr <-substr(mpg$trans, 0, 1)
mpg$tr<-str_replace(mpg$tr,"^m","Manual")
mpg$tr<-str_replace(mpg$tr,"^a","Automatic")
mpg<- mpg[mpg$fl!="c",]
table(mpg$fl)
table(mpg$fl[mpg$year==1999])
table(mpg$fl[mpg$year==2008])
table(mpg$cyl[mpg$year==2008])
table(mpg$cyl[mpg$year==1999])
boxplot(mpg[,-2])
boxplot(mpg[,-1])
boxplot(mpg[,1])
boxplot(mpg)
boxplot(mpg$displ)
boxplot(mpg$displ,horizontal = T)
missmap(mpg)
ggplot(data = mpg, aes(y=displ, x=as.factor(year), col=materialCat)) +
geom_boxplot() +
ggplot(data = mpg, aes(y=displ, x=as.factor(year), col=materialCat)) +
geom_boxplot()
ggplot(data = mpg, aes(y=displ, x=as.factor(year))) +
geom_boxplot()
summary(mpg$displ)
table(mpg$displ)
density(mpg$displ)
plot(density(mpg$displ[mpg$year==1999]))
plot(density(mpg$displ[mpg$year==2008]))
load("~/MASTER/Intelligent Data Analysis/homework1/mpg.RData")
library(stringr)
library(ggplot2)
library(gridExtra)
library(plyr)
library(reshape)
#mpg <- get(load("mpg.Rdata"))
mpg$tr <-substr(mpg$trans, 0, 1)
mpg$tr<-str_replace(mpg$tr,"^m","Manual")
mpg$tr<-str_replace(mpg$tr,"^a","Automatic")
mpg<- mpg[mpg$fl!="c",]
#melt reshapes the dataset so its easier to manipulate through plots.
#call View(mmpg) and View(mpg) to see the difference
mmpg<-melt(mpg,id=c("manufacturer","model","displ","year","cyl","trans","drv","fl","class","tr"))
plot(density(mpg$displ[mpg$year==1999]))
plot(density(mpg$displ[mpg$year==2008]))
hist(mpg$displ[mpg$year==1999])
hist(mpg$displ[mpg$year==1999],breaks=10)
hist(mpg$displ[mpg$year==1999],breaks=50)
hist(mpg$displ[mpg$year==2008],breaks=50)
d<-density(mpg$displ[mpg$year==2008])
lines(d,col="red")
lines(d,col="red")
hist(mpg$displ[mpg$year==2008],breaks=20)
lines(d,col="red")
plot(d)
hist(mpg$displ[mpg$year==2008],breaks=20,probability = T)
lines(d,col="red")
plot(d)
ggplot(mpg,aes(mpg$displ[mpg$year==2008]))+geom_histogram()
ggplot(mpg,aes(mpg$displ))+geom_histogram()
lines()
hist(mpg$displ[mpg$year==2008],breaks=20,probability = T)
lines(d,col="red")
library(vioplot)
install.packages("vioplot")
View(mpg)
table(mpg$drv)
table(mpg$drv[mpg$year==1999])
table(mpg$drv[mpg$year==2008])
table(mpg$trans[mpg$year==2008])
table(mpg$trans[mpg$year==1999])
hist(mpg$displ[mpg$year==2008],breaks=10,probability = T)
lines(d,color="red")
lines(d,col="red")
hist(mpg$displ[mpg$year==1999],breaks=10,probability = T)
d1<-density(mpg$displ[mpg$year==1999])
d2<-density(mpg$displ[mpg$year==2008])
hist(mpg$displ[mpg$year==1999],breaks=10,probability = T,col="gray", border="white")
lines(d1,col="red",lwd=2)
hist(mpg$displ[mpg$year==2008],breaks=10,probability = T,col="gray", border="white")
lines(d2,col="red",lwd=2)
hist(mpg$displ[mpg$year==2008],breaks=10,probability = T)
colnames <- dimnames(mpg)[[2]]
colnames
d1<-density(mpg$displ[mpg$year==1999])
d2<-density(mpg$displ[mpg$year==2008])
par(mfrow=c(1, 2))
hist(mpg$displ[mpg$year==1999],breaks=10,probability = T,col="gray", border="white",main=colnames[3])
lines(d1,col="red",lwd=2)
hist(mpg$displ[mpg$year==2008],breaks=10,probability = T,col="gray", border="white",main=colnames[3])
lines(d2,col="red",lwd=2)
d1<-density(mpg$displ[mpg$year==1999])
d2<-density(mpg$displ[mpg$year==2008])
par(mfrow=c(1, 2))
hist(mpg$displ[mpg$year==1999],breaks=10,probability = T,col="gray", border="white",main="1999",xlab="cc")
lines(d1,col="red",lwd=2)
hist(mpg$displ[mpg$year==2008],breaks=10,probability = T,col="gray", border="white",main="2008",xlab="cc")
lines(d2,col="red",lwd=2)
title("Engine displacement in litres per year", outer=TRUE)
par(mfrow=c(1, 2))
hist(mpg$displ[mpg$year==1999],breaks=10,probability = T,xlim=c(0, 8),col="gray", border="white",main="1999",xlab="cc")
lines(d1,col="red",lwd=2)
hist(mpg$displ[mpg$year==2008],breaks=10,probability = T,xlim=c(0, 8),col="gray", border="white",main="2008",xlab="cc")
lines(d2,col="red",lwd=2)
title("Engine displacement in litres per year", outer=TRUE)
par(mfrow=c(1, 2))
hist(mpg$displ[mpg$year==1999],breaks=10,probability = T,xlim=c(0, 8),ylim=c(0,0.5),col="gray", border="white",main="1999",xlab="cc")
lines(d1,col="red",lwd=2)
hist(mpg$displ[mpg$year==2008],breaks=10,probability = T,xlim=c(0, 8),ylim=c(0,0.5),col="gray", border="white",main="2008",xlab="cc")
lines(d2,col="red",lwd=2)
title("Engine displacement in litres per year", outer=TRUE)
d1<-density(mpg$displ[mpg$year==1999])
d2<-density(mpg$displ[mpg$year==2008])
par(mfrow=c(1, 2))
hist(mpg$displ[mpg$year==1999],breaks=10,probability = T,xlim=c(0, 8),ylim=c(0,0.5),col="gray", border="white",main="1999",xlab="cc")
lines(d1,col="red",lwd=2)
hist(mpg$displ[mpg$year==2008],breaks=10,probability = T,xlim=c(0, 8),ylim=c(0,0.5),col="gray", border="white",main="2008",xlab="cc",ylab=" ")
lines(d2,col="red",lwd=2)
title("Engine displacement in litres per year", outer=TRUE)
table(mpg$class[mpg$year==1999])
table(mpg$class[mpg$year==2008])
table(mpg$drv[mpg$year==1999])
table(mpg$drv[mpg$year==2008])
boxplot(mpg$displ[mpg$year==1999])
boxplot(mpg$displ[mpg$year==1999]~mpg$displ[mpg$year==2008])
boxplot(as.factor(mpg$displ[mpg$year==1999]) ~ as.factor(mpg$displ[mpg$year==2008]))
boxplot(mpg$displ[mpg$year==1999]~mpg$displ[mpg$year==2008])
boxplot(mpg$displ)
boxplot(mpg$displ[mpg$year==1999]~mpg$displ[mpg$year==2008])
2<-ggplot(mmpg,aes(x=year,y=displ,))+geom_boxplot()+labs(fill = "Type of engine",x=" ",y="NUmber of Miles")
2<-ggplot(mmpg,aes(x=year,y=displ))+geom_boxplot()
2<-ggplot(mpg,aes(x=year,y=displ))+geom_boxplot()
p2<-ggplot(mpg,aes(x=year,y=displ))+geom_boxplot()
p2
p2<-ggplot(mpg,aes(x=as.factor(year),y=displ))+geom_boxplot()
p2
p2<-ggplot(mpg,aes(x=as.factor(year),y=displ))+geom_boxplot()+geom_dotplot()
p2
p2<-ggplot(mpg,aes(x=as.factor(year),y=displ))+geom_boxplot()+geom_area()
p2
p2<-ggplot(mpg,aes(x=as.factor(year),y=displ))+geom_boxplot()
p2<-ggplot(mpg,aes(x=as.factor(year),y=displ))+geom_boxplot()
p2
p2<-ggplot(mpg,aes(x=as.factor(year),y=cty))+geom_boxplot()
p2
p2<-ggplot(mpg,aes(x=as.factor(year),y=hwy))+geom_boxplot()
p2
list1<-list("displ","cyl","cty","hwy")
list1[1]
par(mfrow=c(2,2))
list1<-list("displ","cyl","cty","hwy")
for(i in 1:4){
ggplot(mpg,aes(x=as.factor(year),y=list1[1]))+geom_boxplot()
}
for(i in 1:4){
ggplot(mpg,aes(x=as.factor(year),y=list1[1]))+geom_boxplot()
}
list1<-list("displ","cyl","cty","hwy")
pp<-list()
for(i in 1:4){
pp<-ggplot(mpg,aes(x=as.factor(year),y=list1[1]))+geom_boxplot()
}
grid.arrange(pp[1],pp[2],pp[3],pp[4],nrow=2)
for(i in 1:4){
g<-ggplot(mpg,aes(x=as.factor(year),y=list1[1]))+geom_boxplot()
}
g
g1<-ggplot(mpg,aes(x=as.factor(year),y=displ))+geom_boxplot()
g2<-ggplot(mpg,aes(x=as.factor(year),y=cyl))+geom_boxplot()
g3<-ggplot(mpg,aes(x=as.factor(year),y=cty))+geom_boxplot()
g4<-ggplot(mpg,aes(x=as.factor(year),y=hwy))+geom_boxplot()
grid.arrange(g1,g2,g3,g4,nrow=2)
shiny::runApp('MASTER/IntelligentDA/GIT/Shiny App')
shiny::runApp('MASTER/IntelligentDA/GIT/Shiny App')
shiny::runApp('MASTER/IntelligentDA/GIT/Shiny App')
install.packages("shinydashboard")
runApp('MASTER/IntelligentDA/GIT/Shiny App')
install.packages("tidyverse")
runApp('MASTER/IntelligentDA/GIT/Shiny App')
install.packages("gridExtra")
runApp('MASTER/IntelligentDA/GIT/Shiny App')
install.packages("tseries")
runApp('MASTER/IntelligentDA/GIT/Shiny App')
install.packages("lawstat")
runApp('MASTER/IntelligentDA/GIT/Shiny App')
install.packages("testit")
runApp('MASTER/IntelligentDA/GIT/Shiny App')
install.packages("vcd")
runApp('MASTER/IntelligentDA/GIT/Shiny App')
install.packages("car")
install.packages((moments))
install.packages("moments")
install.packages("MVM")
runApp('MASTER/IntelligentDA/GIT/Shiny App')
install.packages("MVM")
install.packages("corrplot")
install.packages("corrgram")
install.packages("MVN")
runApp('MASTER/IntelligentDA/GIT/Shiny App')
install.packages("Hmisc")
install.packages("ppcor")
runApp('MASTER/IntelligentDA/GIT/Shiny App')
install.packages("MXM")
runApp('MASTER/IntelligentDA/GIT/Shiny App')
shiny::runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
shiny::runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
shiny::runApp('MASTER/IntelligentDA/GIT/Shiny App')
shiny::runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp()
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp()
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp()
runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
library(devtools)
install_github("vqv/ggbiplot")
library(ggbiplot)
shiny::runApp('MASTER/IntelligentDA/GIT/Shiny App')
runApp('MASTER/IntelligentDA/GIT/Shiny App')
library(ggplot2) # Data visualization
library(readr) # CSV file I/O, e.g. the read_csv function
library(caret)
library(randomForest)
library(caTools)   #<- For stratified split
library(rpart.plot)
train01<-read.csv("mushrooms_v2.csv")
setwd("~/MASTER/Cognitive/CSMushrooms")
train01<-read.csv("mushrooms_v2.csv")
mushrooms <- train01
View(mushrooms)
mushrooms$class <- NULL
names <- colnames(mushrooms)
z<-cbind.data.frame(Var=names(train01), Total_Class=sapply(train01,function(x){as.numeric(length(levels(x)))}))
print(z)
set.seed(121)
sample = sample.split(train01$class, SplitRatio = .7)
x_train = subset(train01, sample == TRUE)
x_test = subset(train01, sample == FALSE)
y_train<-x_train$class
y_test <- x_test$class
x_train$class<-NULL
x_test$class<-NULL
# Create a stratified sample for repeated cv
cv.10.folds<-createMultiFolds(y_train,k=10,times=2)
# create a control object for repeated cv in caret
ctrl.1<-trainControl(method="repeatedcv",number=10,repeats=2,index=cv.10.folds)
